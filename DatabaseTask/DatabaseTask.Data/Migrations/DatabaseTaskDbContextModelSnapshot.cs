// <auto-generated />
using System;
using DatabaseTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseTask.Data.Migrations
{
    [DbContext(typeof(DatabaseTaskDbContext))]
    partial class DatabaseTaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabaseTask.Core.Domain.Absense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Absense");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbsenseId")
                        .HasColumnType("int");

                    b.Property<int?>("ChildGroupHistoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbsenseId");

                    b.HasIndex("ChildGroupHistoryId");

                    b.HasIndex("QueueId");

                    b.ToTable("Child");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.ChildGroupHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ChildGroupHistory");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AbsenseId")
                        .HasColumnType("int");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<int?>("ChildGroupHistoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupType")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbsenseId");

                    b.HasIndex("ChildGroupHistoryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MenuId");

                    b.HasIndex("QueueId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dinner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DinnerSnack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MorningSnack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Portions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Queue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Queue");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Child", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.Absense", null)
                        .WithMany("ChildId")
                        .HasForeignKey("AbsenseId");

                    b.HasOne("DatabaseTask.Core.Domain.ChildGroupHistory", null)
                        .WithMany("ChildId")
                        .HasForeignKey("ChildGroupHistoryId");

                    b.HasOne("DatabaseTask.Core.Domain.Queue", null)
                        .WithMany("ChildId")
                        .HasForeignKey("QueueId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Employee", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.JobTitle", null)
                        .WithMany("EmployeeId")
                        .HasForeignKey("JobTitleId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Group", b =>
                {
                    b.HasOne("DatabaseTask.Core.Domain.Absense", null)
                        .WithMany("GroupId")
                        .HasForeignKey("AbsenseId");

                    b.HasOne("DatabaseTask.Core.Domain.ChildGroupHistory", null)
                        .WithMany("GroupId")
                        .HasForeignKey("ChildGroupHistoryId");

                    b.HasOne("DatabaseTask.Core.Domain.Employee", null)
                        .WithMany("GroupId")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("DatabaseTask.Core.Domain.Menu", null)
                        .WithMany("GroupId")
                        .HasForeignKey("MenuId");

                    b.HasOne("DatabaseTask.Core.Domain.Queue", null)
                        .WithMany("GroupId")
                        .HasForeignKey("QueueId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Absense", b =>
                {
                    b.Navigation("ChildId");

                    b.Navigation("GroupId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.ChildGroupHistory", b =>
                {
                    b.Navigation("ChildId");

                    b.Navigation("GroupId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Employee", b =>
                {
                    b.Navigation("GroupId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.JobTitle", b =>
                {
                    b.Navigation("EmployeeId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Menu", b =>
                {
                    b.Navigation("GroupId");
                });

            modelBuilder.Entity("DatabaseTask.Core.Domain.Queue", b =>
                {
                    b.Navigation("ChildId");

                    b.Navigation("GroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
